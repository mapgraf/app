name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # Triggers the workflow when a tag is pushed
  workflow_dispatch: # Enables manual triggering from the UI
    inputs:
      org_name:
        description: 'organization'
        required: true
        default: 'NOC' # Default filename
      target_sys:
        description: 'your Grafana server system'
        required: true
        default: 'Linux'
        type: choice
        options:
          - Linux
          - Windows
      root_urls:   
        description: 'root urls (same as your "domain" in grafana.ini, if set)'
        required: true
        default: 'http://localhost:3000,http://dev.test.ru' # Default domain

permissions: 
  contents: write
  packages: write
  actions: write
  deployments: write
  discussions: write
  issues: write
  pages: write
  pull-requests: write
  repository-projects: write  
  statuses: write  

jobs:
  build:
    name: Build with Mage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.6' 

    - name: Generate secretkey.go
      run: |
        mkdir -p pkg/plugin # Create directory if it doesn't exist
        echo "package plugin" > pkg/plugin/secretkey.go
        echo "const JWT_SECRET_KEY = \"${{ secrets.JWT_SECRET_KEY }}\"" >> pkg/plugin/secretkey.go

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Run Mage build
      run: mage -v build:${{ github.event.inputs.target_sys }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' 
    
    - name: Sign Plugin
      run: |
        export GRAFANA_ACCESS_POLICY_TOKEN=${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN }}
        npx @grafana/sign-plugin@latest --rootUrls ${{ github.event.inputs.root_urls}} 
        
    - name: Rename dist folder
      run: mv ./dist ./vaduga-mapgl-app # Rename dist 

    - name: Zip build output
      run: zip -r mapgl-app.zip ./vaduga-mapgl-app ./MANIFEST.txt ./vaduga-mapgl-app/* # Include all required files

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: mapgl-app.zip
        path: mapgl-app.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: mapgl-app.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }} 
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./mapgl-app.zip
        asset_name: ${{ github.event.inputs.org_name }}.zip
        asset_content_type: application/zip
