version: '3.0'

services:
  grafana:
    container_name: 'mapgl-app'
    platform: 'linux/amd64'
    build:
      context: ./.config
      args:
        grafana_version: ${GRAFANA_VERSION:-12.1.0}
    ports:
      - 3000:3000/tcp
      - 8089:8089/tcp
      - 8082:8082/tcp
    volumes:
      - $PWD/dist:/var/lib/grafana/plugins/vaduga-mapgl-app
      - $PWD/dist_comm:/var/lib/grafana/plugins/vaduga-mapgl-panel
      - $PWD/dist_lite:/var/lib/grafana/plugins/vaduga-mapgllite-panel
      - $PWD/.seed:/usr/share/grafana/public/seed
      - $PWD/.seed/public_svg:/usr/share/grafana/public/img/icons/mapgl
      - $PWD/provisioning:/etc/grafana/provisioning
      - $PWD/docker_data/grafana_data:/var/lib/grafana
      - $PWD/docker_data/certs:/certs

    env_file:
      - $PWD/docker_data/grafana_conf/graf.env

    restart: always
    environment:
      - GF_INSTALL_PLUGINS=frser-sqlite-datasource,marcusolsson-static-datasource
      - GF_PLUGIN_ALLOW_LOCAL_MODE=true
      - GF_USERS_VIEWERS_CAN_EDIT=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      #- GF_LOG_LEVEL=debug
      - GF_SERVE_FROM_SUB_PATH=true
      - GF_FEATURE_TOGGLES_ENABLE=enableDatagridEditing, editPanelCSVDragAndDrop
      # Set development mode so plugins can be loaded without the need to sign
      #- GF_DEFAULT_APP_MODE="development"
      - HTTP_USER="{{ grafana_user }}"
      - HTTP_PASS="{{ grafana_passwd }}"

#  sim-server:
#    container_name: sim-server
#    build:
#      context: ./api-server
#    restart: always
#    ports:
#      - 3003:3003/tcp
#    env_file:
#      - $PWD/api-server/.env
#    volumes:
#      - $PWD/api-server/:/home/node/app/server



  #nginx:
  #  container_name: nginx
  #  build: ./nginx
  #  restart: always
  #  environment:
  #    - GRAFANA_HOST=172.17.0.1
  #  ports:
  #    - 80:80/tcp
  #  depends_on:
  #    - grafana

  # redis:
  #   container_name: redis-mapgl
  #   image: redis/redis-stack:7.2.0-v6 #latest
  #   restart: always
  #   ports:
  #      - 6370:6379
  #   expose:
  #      - 6379

  # use REDIS_ARGS for redis-stack-server instead of command arguments
  # (using non-default values here to validate the behavior)
    # environment:
       # - REDIS_ARGS=--save 20 1 --replica-read-only no --logfile /data/redis-server.log --aclfile /data/users.acl
#--rename-command HGETALL HGALL


    # deploy:
    #     replicas: 1
    #     restart_policy:
    #      condition: on-failure

    # volumes:
    #   - ./redis_data:/data
